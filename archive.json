{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2025-06-22T01:59:54.150834+00:00",
  "repo": "yaroslavros/draft-tls-cert-update",
  "labels": [
    {
      "name": "bug",
      "description": "Something isn't working",
      "color": "d73a4a"
    },
    {
      "name": "documentation",
      "description": "Improvements or additions to documentation",
      "color": "0075ca"
    },
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "enhancement",
      "description": "New feature or request",
      "color": "a2eeef"
    },
    {
      "name": "good first issue",
      "description": "Good for newcomers",
      "color": "7057ff"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "008672"
    },
    {
      "name": "invalid",
      "description": "This doesn't seem right",
      "color": "e4e669"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "wontfix",
      "description": "This will not be worked on",
      "color": "ffffff"
    }
  ],
  "issues": [
    {
      "number": 4,
      "id": "I_kwDOOdsfOM68aOuz",
      "title": "Require Certificate Update support",
      "url": "https://github.com/yaroslavros/draft-tls-cert-update/issues/4",
      "state": "OPEN",
      "author": "rifaat-ietf",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "> Section 3.1\n> If the extension is present with a zero-length extension_data, the sender indicates that it does not wish to receive certificate updates, but may provide a CertificateUpdate message later in the session if the peer supplied an authenticator request.\n> \n\nShould we allow either side to require the peer to support the Certificate Update mechanism, and tear down the connection if the other side does not support it?\n",
      "createdAt": "2025-06-19T17:38:36Z",
      "updatedAt": "2025-06-20T16:52:40Z",
      "closedAt": null,
      "comments": [
        {
          "author": "yaroslavros",
          "authorAssociation": "OWNER",
          "body": "I don't think this so. Lack of Certificate Update mechanism support only creates risks after original certificate has expired.",
          "createdAt": "2025-06-20T16:52:40Z",
          "updatedAt": "2025-06-20T16:52:40Z"
        }
      ]
    }
  ],
  "pulls": [
    {
      "number": 1,
      "id": "PR_kwDOOdsfOM6ZrcJY",
      "title": "Update to draft",
      "url": "https://github.com/yaroslavros/draft-tls-cert-update/pull/1",
      "state": "MERGED",
      "author": "tireddy2",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-06-09T12:36:25Z",
      "updatedAt": "2025-06-12T22:59:35Z",
      "baseRepository": "yaroslavros/draft-tls-cert-update",
      "baseRefName": "main",
      "baseRefOid": "1d14c23fc6f098bf352504f9ca2a444b8a01865d",
      "headRepository": "tireddy2/draft-tls-cert-update",
      "headRefName": "main",
      "headRefOid": "70f3807ae56cc77d78187137984d79bc2929e1b8",
      "closedAt": "2025-06-12T22:59:35Z",
      "mergedAt": "2025-06-12T22:59:35Z",
      "mergedBy": "yaroslavros",
      "mergeCommit": {
        "oid": "cc6642818a031bdabc28f95dac318e67c88cbbca"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOOdsfOM6tiPA-",
          "commit": {
            "abbreviatedOid": "8449a60"
          },
          "author": "yaroslavros",
          "authorAssociation": "OWNER",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2025-06-09T21:39:44Z",
          "updatedAt": "2025-06-09T21:42:40Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "```suggestion\r\n{{!TLS=RFC8446}} provides strong guarantees of confidentiality, integrity, and authentication, but does not include a general-purpose mechanism for updating certificates of both endpoints after the handshake. While TLS 1.3 permits post-handshake authentication for clients as defined in {{Section 4.6.2 of TLS}}, it provides no standardized way for servers to update their certificates once the handshake is complete. Additionally, TLS 1.3 post-handshake authentication is explicitly prohibited from QUIC according to {{Section 4.4 of ?QUIC-TLS=RFC9001}} and HTTP/2 according to {{Section 2 of ?HTTP2-TLS13=RFC8740}} because it allows clients to introduce new certificates and change authorization properties of the connection.\r\n```",
              "createdAt": "2025-06-09T21:39:44Z",
              "updatedAt": "2025-06-09T21:42:40Z"
            },
            {
              "originalPosition": 39,
              "body": "I'm not sure if repetition of introduction is necessary here. If we do, we need to explain once again how certificate update mechanism is different and why it is allowed in QUIC",
              "createdAt": "2025-06-09T21:42:15Z",
              "updatedAt": "2025-06-09T21:42:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOOdsfOM6tmp_a",
          "commit": {
            "abbreviatedOid": "8449a60"
          },
          "author": "tireddy2",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-06-10T08:51:07Z",
          "updatedAt": "2025-06-10T08:51:08Z",
          "comments": [
            {
              "originalPosition": 39,
              "body": "Yes, I removed the text. ",
              "createdAt": "2025-06-10T08:51:08Z",
              "updatedAt": "2025-06-10T08:51:08Z"
            }
          ]
        }
      ]
    },
    {
      "number": 2,
      "id": "PR_kwDOOdsfOM6aVbhl",
      "title": "Further updates to draft",
      "url": "https://github.com/yaroslavros/draft-tls-cert-update/pull/2",
      "state": "MERGED",
      "author": "tireddy2",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-06-13T06:58:37Z",
      "updatedAt": "2025-06-15T18:24:15Z",
      "baseRepository": "yaroslavros/draft-tls-cert-update",
      "baseRefName": "main",
      "baseRefOid": "cc6642818a031bdabc28f95dac318e67c88cbbca",
      "headRepository": "tireddy2/draft-tls-cert-update",
      "headRefName": "main",
      "headRefOid": "299fad74c75296dfb6f2743a06eb0f4bf1e4fdfd",
      "closedAt": "2025-06-15T18:24:15Z",
      "mergedAt": "2025-06-15T18:24:15Z",
      "mergedBy": "yaroslavros",
      "mergeCommit": {
        "oid": "ee13ff7e15173a9f19767e5e3cc8f034890d80b9"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOOdsfOM6uS349",
          "commit": {
            "abbreviatedOid": "ef80c4e"
          },
          "author": "yaroslavros",
          "authorAssociation": "OWNER",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2025-06-13T10:04:24Z",
          "updatedAt": "2025-06-13T10:10:15Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "```suggestion\r\n```\r\nLet's replace it with inline reference (see suggestion below)",
              "createdAt": "2025-06-13T10:04:24Z",
              "updatedAt": "2025-06-13T10:10:15Z"
            },
            {
              "originalPosition": 25,
              "body": "```suggestion\r\nThis specification is also applicable to DTLS 1.3 {{!DTLS=RFC9147}}. The `CertificateUpdate` and `CertificateUpdateRequest` messages are handshake messages and are subject to DTLS built-in support for sequencing, fragmentation, retransmission, and replay detection, as specified in {{DTLS}}. No additional protection mechanisms are required beyond the normal DTLS handshake processing.\r\n```",
              "createdAt": "2025-06-13T10:04:56Z",
              "updatedAt": "2025-06-13T10:10:15Z"
            },
            {
              "originalPosition": 15,
              "body": "Isn't this already covered by the following points above?\r\n\r\n> All extensions present in the original certificate MUST also be present in the updated certificate with identical values.\r\n> Updated certificate MUST NOT contain any extensions that are not present in the original certificate.",
              "createdAt": "2025-06-13T10:06:26Z",
              "updatedAt": "2025-06-13T10:10:15Z"
            },
            {
              "originalPosition": 35,
              "body": "I'm really not sure about this.\r\n\r\nThe whole idea of certificate update compared to application level authenticators such as described in `draft-ietf-httpbis-secondary-server-certs` is to make it as transparent to applications as possible. Having a MUST here goes against this. Do you foresee a hard requirement to reevaluate authentication for all kinds of applications given that we have a very strict wording about nature of the updated cert above? That is, it has to have the same algorithm, extensions, signed by the very same chain and so on. Effectively the only allowed variance is validity.",
              "createdAt": "2025-06-13T10:09:59Z",
              "updatedAt": "2025-06-13T10:10:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOOdsfOM6ulZWF",
          "commit": {
            "abbreviatedOid": "ef80c4e"
          },
          "author": "tireddy2",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-06-15T08:11:54Z",
          "updatedAt": "2025-06-15T08:11:55Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "Yes, it is already covered, removed it. ",
              "createdAt": "2025-06-15T08:11:54Z",
              "updatedAt": "2025-06-15T08:11:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOOdsfOM6umCD7",
          "commit": {
            "abbreviatedOid": "ef80c4e"
          },
          "author": "tireddy2",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-06-15T11:41:50Z",
          "updatedAt": "2025-06-15T11:41:50Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "I see your point, how about the following text: \r\n\r\nApplications that rely on peer certificate properties for access control decisions MAY reevaluate those decisions after a certificate update if needed. However, because the updated certificate is required to maintain the same identity, such re-validation is typically unnecessary for applications that rely only on the peer\u2019s authenticated identity. If the updated certificate does not match the identity validated during the TLS handshake, the TLS stack MUST terminate the connection.",
              "createdAt": "2025-06-15T11:41:50Z",
              "updatedAt": "2025-06-15T11:41:50Z"
            }
          ]
        }
      ]
    },
    {
      "number": 3,
      "id": "PR_kwDOOdsfOM6bS2y5",
      "title": "Sequence Diagram",
      "url": "https://github.com/yaroslavros/draft-tls-cert-update/pull/3",
      "state": "CLOSED",
      "author": "rifaat-ietf",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-06-19T17:36:07Z",
      "updatedAt": "2025-06-20T20:32:57Z",
      "baseRepository": "yaroslavros/draft-tls-cert-update",
      "baseRefName": "main",
      "baseRefOid": "ee13ff7e15173a9f19767e5e3cc8f034890d80b9",
      "headRepository": "rifaat-ietf/draft-tls-cert-update",
      "headRefName": "main",
      "headRefOid": "933f2db3900530147eb80973dc2ba207322cec72",
      "closedAt": "2025-06-20T20:32:57Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "yaroslavros",
          "authorAssociation": "OWNER",
          "body": "Adding diagram is a great idea! Unfortunately this one is malformed... let me take a stab at doing one with aasvg later today.",
          "createdAt": "2025-06-20T16:03:03Z",
          "updatedAt": "2025-06-20T16:03:03Z"
        },
        {
          "author": "rifaat-ietf",
          "authorAssociation": "COLLABORATOR",
          "body": "No worries. I can send you the PlantUML file, if that helps.",
          "createdAt": "2025-06-20T16:04:42Z",
          "updatedAt": "2025-06-20T16:04:42Z"
        },
        {
          "author": "yaroslavros",
          "authorAssociation": "OWNER",
          "body": "As discussed, I added a different diagram more aligned with TLS 1.3 spec style.",
          "createdAt": "2025-06-20T20:32:57Z",
          "updatedAt": "2025-06-20T20:32:57Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOOdsfOM6vl8VY",
          "commit": {
            "abbreviatedOid": "933f2db"
          },
          "author": "tireddy2",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-06-20T12:36:09Z",
          "updatedAt": "2025-06-20T12:36:09Z",
          "comments": []
        }
      ]
    }
  ]
}